local baseHeight 		= 100
local chunkScale 		= 100
local renderDist 		= 90
local xScale 			= 191
local zScale 			= 190
local generationSeed	= 5
 
------------------------------------------------------------------------------------------------------------------------------------------------


local chunks = {}
 
function chunkExists(chunkX,chunkZ)
	if not chunks[chunkX] then
		chunks[chunkX] = {}
	end
	return chunks[chunkX][chunkZ]
end
 
function mountLayer(x,heightY,z,material)
	local begY = -baseHeight
	local endY = heightY
	workspace.Terrain:FillBlock(CFrame.new(x*4+2, (begY+endY)*4/2, z*4+2), Vector3.new(4, (endY-begY)*4, 4), material)	
end
 
function makeChunk(chunkX,chunkZ)
	local rootPos = Vector3.new(chunkX*chunkScale,0,chunkZ*chunkScale)
	chunks[chunkX][chunkZ] = true -- Acknowledge the chunk's existance.
	for x = 0,chunkScale-1 do
		for z = 0,chunkScale-1 do
			local cx = (chunkX*chunkScale) + x
			local cz = (chunkZ*chunkScale) + z
			local noise = math.noise(generationSeed,cx/xScale,cz/zScale)
			local cy = noise*baseHeight
			mountLayer(cx,0.75,cz,Enum.Material.Water)
			if cy < 2 then
			mountLayer(cx,cy,cz,Enum.Material.Sand)
			elseif cy < 25 then
			mountLayer(cx,cy,cz,Enum.Material.Grass)
			elseif cy < 50 then 
			mountLayer(cx,cy,cz,Enum.Material.Rock)
			else
			mountLayer(cx,cy,cz,Enum.Material.Snow)
			end		
		end
	end
end
 
function checkSurroundings(location)
	local chunkX,chunkZ = math.floor(location.X/4/chunkScale),math.floor(location.Z/4/chunkScale)
	local range = math.max(1,renderDist/chunkScale)
	for x = -range,range do
		for z = -range,range do
			local cx,cz = chunkX + x,chunkZ + z
			if not chunkExists(cx,cz) then
				makeChunk(cx,cz)
			end
		end
	end
end
 
while true do
	for _,player in pairs(game.Players:GetPlayers()) do
		if player.Character then
			local torso = player.Character:FindFirstChild("Torso")
			if torso then
				checkSurroundings(torso.Position)
			end
		end
	end
	wait(1)
end
